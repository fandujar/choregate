version: '3.8'

x-environment-variables: &common-env-vars
  DATABASE_HOST: db
  DATABASE_PORT: 5432
  DATABASE_USER: choregate
  DATABASE_PASSWORD: choregate
  DATABASE_NAME: choregate
  GOSUMDB: sum.golang.org
  CHOREGATE_JWT_SECRET: jwt_secret
  CHOREGATE_SUPERUSER_EMAIL: email@admin.com
  CHOREGATE_SUPERUSER_PASSWORD: password
  CHOREGATE_REPOSITORY_TYPE: memory
  KUBECONFIG: /tmp/kind-kubeconfig.yaml

services:
  backend:
    build:
      context: ../..
      dockerfile: hack/development/Dockerfile.backend
    container_name: choregate-backend
    environment:
      <<: *common-env-vars
    ports:
      - "8080:8080"
    volumes:
      - ../../:/app
      - /tmp/kind-kubeconfig.yaml:/tmp/kind-kubeconfig.yaml
    depends_on:
      db:
        condition: service_healthy
      frontend:
        condition: service_healthy
    networks:
      - choregate-network

  frontend:
    build:
      context: ../..
      dockerfile: hack/development/Dockerfile.frontend
    environment:
      <<: *common-env-vars
    container_name: choregate-ui
    ports:
      - "3000:3000"
    volumes:
      - ../../cmd:/app/cmd
      - ../../choregate-ui:/app/choregate-ui
      - node_modules:/app/choregate-ui/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - choregate-network

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: choregate
      POSTGRES_PASSWORD: choregate
      POSTGRES_DB: choregate
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U choregate"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - choregate-network

  migrate:
    build:
      context: ../..
      dockerfile: hack/development/Dockerfile.migrate
    depends_on:
      db:
        condition: service_healthy
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=postgres://choregate:choregate@localhost:5432/choregate?sslmode=disable
      - GOOSE_MIGRATION_DIR=/app/migrations
    volumes:
      - ../../migrations:/app/migrations
    entrypoint: ["goose", "up"]
    networks:
      - choregate-network

volumes:
  db-data:
  node_modules:

networks:
  choregate-network:
    driver: bridge
